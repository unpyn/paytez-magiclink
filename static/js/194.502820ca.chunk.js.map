{"version":3,"file":"static/js/194.502820ca.chunk.js","mappings":"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","sources":["components/auth/Auth.js","tkey.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport appendScript from \"../../utils/appendScript\"\r\nimport removeScript from \"../../utils/removeScript\"\r\nimport swal from 'sweetalert';\r\nimport { tKey } from \"../../tkey\"\r\nimport { EthereumPrivateKeyProvider } from \"@web3auth/ethereum-provider\";\r\nimport Web3 from \"web3\";\r\nimport BN from 'bn.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/authAction';\r\nimport { ethers } from 'ethers';\r\nimport { setWeb3 } from '../../reducers/web3Reducer';\r\nimport { AVAILABLE_NETWORK } from '../../actions/constant';\r\nimport { magic } from '../../lib/magic';\r\n\r\nconst Auth = () => {\r\n\r\n    const { key } = useLocation()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const { isAuthenticated } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        appendScript(\"./assets/js/vendor.min.js\")\r\n        appendScript(\"./assets/js/theme.min.js\")\r\n\r\n        return () => {\r\n            removeScript(\"./assets/js/vendor.min.js\")\r\n            removeScript(\"./assets/js/theme.min.js\")\r\n        }\r\n\r\n    }, [key])\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [privateKey, setPrivateKey] = useState();\r\n    const [oAuthShare, setOAuthShare] = useState();\r\n    const [provider, setProvider] = useState();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        finishSocialLogin()\r\n    }, [])\r\n\r\n    const finishSocialLogin = async () => {\r\n        try {\r\n            const result = await magic.oauth.getRedirectResult();\r\n            const { oauth } = result;\r\n            const { userInfo } = oauth;\r\n            const userDetails = {\r\n                firstName: userInfo.name,\r\n                email: userInfo.email,\r\n                photo: userInfo.picture,\r\n                origin: oauth.provider,\r\n            }\r\n            userLogin(userDetails)\r\n            console.log(result);\r\n        } catch (err) {\r\n            // navigate(\"/login\")\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate(\"/user/dashboard\")\r\n\r\n        }\r\n    }, [isAuthenticated])\r\n\r\n    const userLogin = async (userInfo) => {\r\n\r\n\r\n        const providerConnect = new ethers.providers.Web3Provider(magic.rpcProvider);\r\n        const { chainId } = await providerConnect.getNetwork()\r\n        localStorage.setItem(\"chainId\", chainId)\r\n        console.log(\"chainId\", chainId)\r\n        const signer = providerConnect.getSigner();\r\n        const address = await signer.getAddress();\r\n\r\n        var findNetwork = AVAILABLE_NETWORK.find(x => x.networkID === chainId)\r\n\r\n        const web3Data = {\r\n            //  providerConnect: providerConnect,\r\n            provider: providerConnect,\r\n            address: address,\r\n            signer: signer,\r\n            connected: true,\r\n            chainId: chainId,\r\n            symbol: findNetwork.symbol,\r\n            networkName: findNetwork.networkName,\r\n            icon: findNetwork.icon\r\n        }\r\n\r\n        dispatch(setWeb3(web3Data))\r\n\r\n        userInfo.walletAddress = address\r\n        console.log(\"userInfo\", userInfo)\r\n        dispatch(login(userInfo, \"user\"))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bg-gradient2 min-vh-100 align-items-center d-flex justify-content-center pt-2 pt-sm-5 pb-4 pb-sm-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n\r\n                        <div className=\"row g-0 d-flex justify-content-center\">\r\n                            <span className=\"pln\"> </span>\r\n                            <div className=\"spinner-border text-primary m-2\" role=\"status\">\r\n                                <span className=\"visually-hidden\">\r\n                                    <span className=\"pln\">Loading...</span>\r\n                                </span>\r\n                            </div>\r\n                            <span className=\"pln\"></span>\r\n                            <h4 className='text-center'>Loading your dashboard...</h4>\r\n\r\n                        </div>{\" \"}\r\n                        <div className='poweredby'>\r\n                            <img\r\n                                src=\"assets/images/poweredby.png\"\r\n                                className=\"align-self-center\"\r\n                                alt=\"logo-img\"\r\n                                height={50}\r\n                            />\r\n                        </div>\r\n                        {/* end card-body */}\r\n\r\n                        {/* end card */}\r\n                    </div>{\" \"}\r\n                    {/* end col */}\r\n                </div>\r\n                {/* end row */}\r\n            </div>\r\n            {/* end container */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import ThresholdKey from \"@tkey/default\";\r\nimport WebStorageModule from \"@tkey/web-storage\";\r\nimport SecurityQuestionsModule from \"@tkey/security-questions\";\r\n\r\n// Configuration of Service Provider\r\nconst customAuthArgs = {\r\n  web3AuthClientId: \"BBXXmrK3cwdQZOAT5dv53ROThnhqcjQ9JY8Fk04xWYQrVWNINMv1Ohjxi2jms5NT0u4KiSgeo-EHtUBow110Hsk\",\r\n  baseUrl: window.location.origin,\r\n  redirectPathName: \"auth\",\r\n  enableLogging: true,\r\n  uxMode: \"redirect\",\r\n  network: \"cyan\", // based on the verifier network.\r\n};\r\n// Configuration of Modules\r\nconst webStorageModule = new WebStorageModule();\r\nconst securityQuestionsModule = new SecurityQuestionsModule();\r\n\r\n// Instantiation of tKey\r\nexport const tKey = new ThresholdKey({\r\n  modules: {\r\n    webStorage: webStorageModule,\r\n    securityQuestions: securityQuestionsModule,\r\n  },\r\n  customAuthArgs: customAuthArgs,\r\n});\r\n\r\n"],"names":["key","useLocation","navigate","useNavigate","dispatch","useDispatch","isAuthenticated","useSelector","state","auth","useEffect","appendScript","removeScript","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","finishSocialLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","oauth","userInfo","userDetails","wrap","_context","prev","next","magic","getRedirectResult","sent","firstName","name","email","photo","picture","origin","provider","userLogin","console","log","t0","error","stop","apply","arguments","_ref2","_callee2","providerConnect","_yield$providerConnec","chainId","signer","address","findNetwork","web3Data","_context2","ethers","rpcProvider","getNetwork","localStorage","setItem","getSigner","getAddress","AVAILABLE_NETWORK","find","x","networkID","connected","symbol","networkName","icon","setWeb3","walletAddress","login","_x","_jsx","className","children","_jsxs","role","src","alt","height","customAuthArgs","web3AuthClientId","baseUrl","window","location","redirectPathName","enableLogging","uxMode","network","webStorageModule","WebStorageModule","securityQuestionsModule","SecurityQuestionsModule","ThresholdKey","modules","webStorage","securityQuestions"],"sourceRoot":""}