{"version":3,"file":"static/js/870.11b714a9.chunk.js","mappings":"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","sources":["actions/common.js","components/commonlayout/BaseTitle.js","components/webpayment/Invoice.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\nimport { ToastPopup } from \"./constant\";\r\nimport axios from \"axios\";\r\nimport TokenABI from \"../contracts/abi.json\"\r\n\r\nexport const getCoinBalance = async (signer) => {\r\n    const balvalue = await signer.getBalance();\r\n    const result = ethers.utils.formatUnits(balvalue, 18); // 18 is the number of decimal places\r\n    return result\r\n}\r\n\r\nexport const getTokenBalance = async (contractAddress, address, signer) => {\r\n\r\n    const tokencontract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const assetrate = await tokencontract.balanceOf(address);\r\n    const convertedprice = ethers.utils.formatUnits(assetrate, 'ether');\r\n    return convertedprice\r\n}\r\n\r\nexport const getTokenSymbol = async (contractAddress, signer) => {\r\n\r\n    const tokencontract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const assetsymbol = await tokencontract.symbol();\r\n    return assetsymbol\r\n}\r\n\r\nexport const copyTextToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text)\r\n        .then(() => {\r\n            ToastPopup.success(\"Copied\")\r\n        })\r\n        .catch((error) => {\r\n            ToastPopup.failure(\"Error copying text to clipboard:\")\r\n        });\r\n}\r\n\r\n\r\nexport const getMarketPrice = async (ids, defaultcurrency = \"USD\") => {\r\n    try {\r\n\r\n        let result = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=${defaultcurrency}&x_cg_demo_api_key=CG-uTaKZVjZTx7tzeHj1BkVXj4A`)\r\n        let temp = result.data;\r\n        var marketPrice = temp[ids][defaultcurrency.toLowerCase()]\r\n        // console.log(\"TEMP DATA\", temp)\r\n        return parseFloat(marketPrice ? marketPrice : 1).toFixed(4)\r\n    } catch (err) {\r\n        console.log(\"errr\", err)\r\n        return 0\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const sendCoin = async (provider, signer, sendAddress, sendValue) => {\r\n    const transactionHash = await signer.sendTransaction({\r\n        to: sendAddress,\r\n        value: ethers.utils.parseEther(sendValue),\r\n    });\r\n    console.log(\"transactionHash\", transactionHash.hash)\r\n    const [txhash, status] = await getTxnStatus(transactionHash.hash, provider);\r\n    return { txhash, status }\r\n}\r\n\r\n\r\nexport const sendTokenFromContract = async (provider, signer, contractAddress, sendAddress, sendValue) => {\r\n    const contract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const recipientAddress = sendAddress;\r\n    console.log(\"sendAddress\", sendAddress)\r\n    console.log(\"sendValue\", sendValue)\r\n\r\n    const amount = ethers.utils.parseUnits(sendValue, '18');\r\n    const transactionHash = await contract.transfer(recipientAddress, amount);\r\n    console.log(\"transactionHash\", transactionHash.hash)\r\n    const [txhash, status] = await getTxnStatus(transactionHash.hash, provider);\r\n    return { txhash, status }\r\n}\r\n\r\n\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\n\r\nexport const getTxnStatus = async (txHash, provider) => {\r\n    let transactionReceipt = null\r\n    while (transactionReceipt == null) { // Waiting expectedBlockTime until the transaction is mined\r\n        transactionReceipt = await provider.getTransactionReceipt(txHash);\r\n        await sleep(3000)\r\n    }\r\n    if (transactionReceipt.status) {\r\n        return [txHash, true];\r\n    } else {\r\n        return [txHash, false];\r\n    }\r\n}","import React from 'react'\r\n\r\nconst BaseTitle = ({ title, subtitle }) => {\r\n    return (\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <div class=\"page-title\">\r\n                    <h3 class=\"my-0\">{title}</h3>\r\n                    <p class=\"mt-1 fw-medium\">{subtitle}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BaseTitle\r\n","import React, { useState, useEffect } from 'react'\r\nimport BaseLayout from '../commonlayout/BaseLayout'\r\nimport BaseTitle from '../commonlayout/BaseTitle'\r\nimport { API_URL, BlockPopup, EXPLORER_TXN_URL_LIST, SITE_LINK, ToastPopup } from '../../actions/constant'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { copyTextToClipboard } from '../../actions/common'\r\nimport moment from \"moment\"\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst InvoiceItem = ({ item }) => {\r\n\r\n    var badge = \"danger\"\r\n    if (item.status === \"Paid\") {\r\n        badge = \"success\"\r\n    }\r\n\r\n    return <div className=\"row mb-2 mt-2\">\r\n        <div className=\"col\">\r\n            <div className=\"card mb-0\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row align-items-center justify-content-sm-between\">\r\n                        <div className=\"col-lg-1\">\r\n                            <div className=\"form-check\">\r\n                                <label className=\"form-check-label\" htmlFor=\"task4\">\r\n                                    #{item.invoiceNo} {\" \"}\r\n                                </label>\r\n                            </div>{\" \"}\r\n                            {/* end checkbox */}\r\n                        </div>{\" \"}\r\n                        <div className=\"col-lg-2\">\r\n                            <div className=\"form-check\">\r\n                                <label className=\"form-check-label\" htmlFor=\"task4\">\r\n                                    {moment(item.createdAt).format(\"DD-MM-YYYY\")}\r\n                                </label>\r\n                            </div>{\" \"}\r\n                            {/* end checkbox */}\r\n                        </div>{\" \"}\r\n                        <div className=\"col-lg-2\">\r\n                            <div className=\"form-check\">\r\n                                <label className=\"form-check-label\" htmlFor=\"task4\">\r\n                                    {item.invoiceAmount} {item.currencySymbol}\r\n                                </label>\r\n                            </div>{\" \"}\r\n                            {/* end checkbox */}\r\n                        </div>{\" \"}\r\n                        {/* end col */}\r\n                        <div className=\"col-lg-3\">\r\n                            {!item.txnHash ? <span className=\"badge badge-soft-secondary rounded-pill\">\r\n                                Paid Details Not Available\r\n                            </span> : <label className=\"form-check-label\" htmlFor=\"task4\">\r\n                                {parseFloat(item.paidAmount).toFixed(4)} {item.assetSymbol} <br />\r\n                                <small>{item.assetPrice}/{item.assetSymbol}</small>\r\n                            </label>}\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n                            {item.txnHash ? <a href={EXPLORER_TXN_URL_LIST[item.chainId] + item.txnHash} target=\"_blank\">\r\n                                <span className=\"badge badge-soft-secondary rounded-pill\">\r\n                                    View Txn\r\n\r\n                                </span>\r\n                            </a> : <span className=\"badge badge-soft-secondary rounded-pill\">\r\n                                ~\r\n                            </span>}\r\n                        </div>\r\n                        <div className=\"col-lg-3\">\r\n                            <ul className=\"list-inline text-sm-end mb-0\">\r\n\r\n                                <li className=\"list-inline-item pe-3\" id=\"tooltip-container8\">\r\n                                    <span\r\n                                        className=\"fs-13 fw-medium\"\r\n\r\n                                    >\r\n                                        <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                            copyTextToClipboard(`${SITE_LINK}/viewwebpayment/${item._id}`)\r\n                                        }} className=\"icon icon-xxs text-normal\">\r\n                                            Share\r\n\r\n                                        </span>\r\n\r\n                                    </span>\r\n                                </li>\r\n                                <li className=\"list-inline-item pe-3\" id=\"tooltip-container8\">\r\n                                    <span\r\n                                        className=\"fs-13 fw-medium\"\r\n\r\n                                    >\r\n                                        <a target=\"_blank\" href={`/viewwebpayment/${item._id}`}>\r\n                                            <span className=\"icon icon-xxs text-normal\">\r\n                                                View\r\n\r\n                                            </span>\r\n                                        </a>\r\n\r\n                                    </span>\r\n                                </li>\r\n                                <li className=\"list-inline-item\" >\r\n                                    <span className={`badge badge-soft-${badge} p-1`} style={{ width: 100 }}>{item.status}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>{\" \"}\r\n                        {/* end col */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Invoice = () => {\r\n    const [data, setdata] = useState([])\r\n    const [hasNextPage, sethasNextPage] = useState(false)\r\n    const [currentPage, setcurrentPage] = useState(1)\r\n    const [moreloading, setmoreloading] = useState(false)\r\n\r\n\r\n    const { userconfig } = useSelector(state => state.usersetting)\r\n\r\n    const webKeys = [\"webpaymentName\", \"webpaymentLogo\", \"webpaymentEmail\", \"webpaymentPhone\", \"webpaymentAddress\"];\r\n    const checkSettingExist = webKeys.every(key => userconfig.hasOwnProperty(key));\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const getData = async () => {\r\n        BlockPopup.standard('.invoicelist', `Please wait...`);\r\n        try {\r\n            let result = await axios.get(API_URL + `/api/webpayment/?limit=10&page=${currentPage}`)\r\n            BlockPopup.remove('.invoicelist');\r\n            if (result.data) {\r\n                setdata(result.data.docs)\r\n                sethasNextPage(result.data.hasNextPage)\r\n                setcurrentPage(result.data.page)\r\n            }\r\n\r\n        } catch (err) {\r\n            BlockPopup.remove('.invoicelist');\r\n            ToastPopup.failure(\"Error Ocuured in API\")\r\n        }\r\n    }\r\n\r\n    const onLoadMore = async () => {\r\n        setmoreloading(true)\r\n        BlockPopup.standard('.invoicelist', `Please wait...`);\r\n        try {\r\n            let result = await axios.get(API_URL + `/api/webpayment/?limit=10&page=${currentPage + 1}`)\r\n            BlockPopup.remove('.invoicelist');\r\n            setmoreloading(false)\r\n\r\n            if (result.data) {\r\n                var tempres = data.concat(result.data.docs)\r\n                setdata(tempres)\r\n                sethasNextPage(result.data.page)\r\n                setcurrentPage(result.data.hasNextPage)\r\n            }\r\n\r\n        } catch (err) {\r\n            setmoreloading(false)\r\n            BlockPopup.remove('.invoicelist');\r\n            ToastPopup.failure(\"Error Ocuured in API\")\r\n        }\r\n    }\r\n\r\n    var invoiceTable;\r\n\r\n    if (data.length > 0) {\r\n        invoiceTable = data.map(result => {\r\n            return <InvoiceItem item={result} />\r\n        })\r\n    } else {\r\n        invoiceTable = (<div className='col-md-12'>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <h1>No Record Available</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n    return (\r\n        <BaseLayout>\r\n            <section class=\"position-relative p-3 bg-gradient2 min100vh\">\r\n                <div class=\"container\">\r\n                    <BaseTitle title={\"Web Payments\"} subtitle={\"All your invoices in one place\"} />\r\n\r\n                    <div className='row mt-2 m4-2'>\r\n                        {!checkSettingExist && <div className='row mt-2 m4-2'>\r\n                            <div role=\"alert\" className=\"alert alert-danger alert-dismissible\">\r\n                                Uh-oh! It seems you haven't configured the essential settings yet. Please take a moment to set them up for an optimal experience &nbsp;&nbsp;&nbsp;\r\n                                <Link to=\"/user/setting/web\">\r\n                                    <span class=\"badge badge-soft-danger p-1\">Configure Now</span>\r\n\r\n                                </Link>\r\n                            </div>\r\n                        </div>}\r\n                        <div className='col-lg-12'>\r\n                            <div class=\"row\">\r\n                                <div class=\"col\">\r\n                                    <h4 class=\"mb-3 mt-0 fs-16\">Web Payments</h4>\r\n                                </div>\r\n                                <div class=\"col text-end\">\r\n                                    {!userconfig.apiKey ? <Link to=\"/user/setting/apikey\" class=\"btn btn-soft-primary col-3 me-2\" >Get API Key</Link>\r\n                                        : <Link to=\"/developers\" class=\"btn btn-soft-primary col-3 me-2\" >View Docs</Link>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='invoicelist'>\r\n\r\n                        {invoiceTable}\r\n\r\n                    </div>\r\n\r\n                    {hasNextPage && !moreloading && <div className=\"row mb-3 mt-4\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"text-center\">\r\n                                <button onClick={() => onLoadMore()} className=\"btn btn-outline-primary btn-sm\" type=\"button\">\r\n                                    {/* <span\r\n                                        className=\"spinner-border spinner-border-sm me-1\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    /> */}\r\n                                    Load More\r\n                                </button>\r\n                            </div>\r\n                        </div>{\" \"}\r\n                        {/* end col*/}\r\n                    </div>}\r\n\r\n\r\n                </div>\r\n            </section>\r\n        </BaseLayout>\r\n    )\r\n}\r\n\r\nexport default Invoice\r\n"],"names":["getCoinBalance","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","signer","balvalue","result","wrap","_context","prev","next","getBalance","sent","ethers","abrupt","stop","_x","apply","arguments","getTokenBalance","_ref2","_callee2","contractAddress","address","tokencontract","assetrate","convertedprice","_context2","TokenABI","balanceOf","_x2","_x3","_x4","getTokenSymbol","_ref3","_callee3","assetsymbol","_context3","symbol","_x5","_x6","copyTextToClipboard","text","navigator","clipboard","writeText","then","ToastPopup","success","catch","error","failure","getMarketPrice","_ref4","_callee4","ids","defaultcurrency","temp","marketPrice","_args4","_context4","length","undefined","axios","concat","data","toLowerCase","parseFloat","toFixed","t0","console","log","_x7","sendCoin","_ref5","_callee5","provider","sendAddress","sendValue","transactionHash","_yield$getTxnStatus","_yield$getTxnStatus2","txhash","status","_context5","sendTransaction","to","value","hash","getTxnStatus","_slicedToArray","_x8","_x9","_x10","_x11","sendTokenFromContract","_ref6","_callee6","contract","recipientAddress","amount","_yield$getTxnStatus3","_yield$getTxnStatus4","_context6","transfer","_x12","_x13","_x14","_x15","_x16","sleep","milliseconds","Promise","resolve","setTimeout","_ref7","_callee7","txHash","transactionReceipt","_context7","getTransactionReceipt","_x17","_x18","title","subtitle","_jsx","class","children","_jsxs","InvoiceItem","item","badge","className","htmlFor","invoiceNo","moment","createdAt","format","invoiceAmount","currencySymbol","txnHash","paidAmount","assetSymbol","assetPrice","href","EXPLORER_TXN_URL_LIST","chainId","target","id","style","cursor","onClick","SITE_LINK","_id","width","_useState","useState","_useState2","setdata","_useState3","_useState4","hasNextPage","sethasNextPage","_useState5","_useState6","currentPage","setcurrentPage","_useState7","_useState8","moreloading","setmoreloading","userconfig","useSelector","state","usersetting","checkSettingExist","every","key","hasOwnProperty","useEffect","getData","invoiceTable","BlockPopup","standard","API_URL","remove","docs","page","onLoadMore","tempres","map","BaseLayout","BaseTitle","role","Link","apiKey","type"],"sourceRoot":""}