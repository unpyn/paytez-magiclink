{"version":3,"file":"static/js/898.2e16f826.chunk.js","mappings":"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","sources":["actions/common.js","components/dashboard/SendToken.js","components/common/QRCodeGenerator.js","components/dashboard/ReceiveToken.js","components/dashboard/CustomToken.js","components/dashboard/Dashboard.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\nimport { ToastPopup } from \"./constant\";\r\nimport axios from \"axios\";\r\nimport TokenABI from \"../contracts/abi.json\"\r\n\r\nexport const getCoinBalance = async (signer) => {\r\n    const balvalue = await signer.getBalance();\r\n    const result = ethers.utils.formatUnits(balvalue, 18); // 18 is the number of decimal places\r\n    return result\r\n}\r\n\r\nexport const getTokenBalance = async (contractAddress, address, signer) => {\r\n\r\n    const tokencontract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const assetrate = await tokencontract.balanceOf(address);\r\n    const convertedprice = ethers.utils.formatUnits(assetrate, 'ether');\r\n    return convertedprice\r\n}\r\n\r\nexport const getTokenSymbol = async (contractAddress, signer) => {\r\n\r\n    const tokencontract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const assetsymbol = await tokencontract.symbol();\r\n    return assetsymbol\r\n}\r\n\r\nexport const copyTextToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text)\r\n        .then(() => {\r\n            ToastPopup.success(\"Copied\")\r\n        })\r\n        .catch((error) => {\r\n            ToastPopup.failure(\"Error copying text to clipboard:\")\r\n        });\r\n}\r\n\r\n\r\nexport const getMarketPrice = async (ids, defaultcurrency = \"USD\") => {\r\n    try {\r\n\r\n        let result = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=${defaultcurrency}&x_cg_demo_api_key=CG-uTaKZVjZTx7tzeHj1BkVXj4A`)\r\n        let temp = result.data;\r\n        var marketPrice = temp[ids][defaultcurrency.toLowerCase()]\r\n        // console.log(\"TEMP DATA\", temp)\r\n        return parseFloat(marketPrice ? marketPrice : 1).toFixed(4)\r\n    } catch (err) {\r\n        console.log(\"errr\", err)\r\n        return 0\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const sendCoin = async (provider, signer, sendAddress, sendValue) => {\r\n    const transactionHash = await signer.sendTransaction({\r\n        to: sendAddress,\r\n        value: ethers.utils.parseEther(sendValue),\r\n    });\r\n    console.log(\"transactionHash\", transactionHash.hash)\r\n    const [txhash, status] = await getTxnStatus(transactionHash.hash, provider);\r\n    return { txhash, status }\r\n}\r\n\r\n\r\nexport const sendTokenFromContract = async (provider, signer, contractAddress, sendAddress, sendValue) => {\r\n    const contract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const recipientAddress = sendAddress;\r\n    console.log(\"sendAddress\", sendAddress)\r\n    console.log(\"sendValue\", sendValue)\r\n\r\n    const amount = ethers.utils.parseUnits(sendValue, '18');\r\n    const transactionHash = await contract.transfer(recipientAddress, amount);\r\n    console.log(\"transactionHash\", transactionHash.hash)\r\n    const [txhash, status] = await getTxnStatus(transactionHash.hash, provider);\r\n    return { txhash, status }\r\n}\r\n\r\n\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\n\r\nexport const getTxnStatus = async (txHash, provider) => {\r\n    let transactionReceipt = null\r\n    while (transactionReceipt == null) { // Waiting expectedBlockTime until the transaction is mined\r\n        transactionReceipt = await provider.getTransactionReceipt(txHash);\r\n        await sleep(3000)\r\n    }\r\n    if (transactionReceipt.status) {\r\n        return [txHash, true];\r\n    } else {\r\n        return [txHash, false];\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AVAILABLE_ASSETS, BlockPopup, RPC_URL_BY_CHAIN, EXPLORER_TXN_URL_LIST, ToastPopup, addressRegex } from '../../actions/constant'\r\nimport { getCoinBalance, getMarketPrice, getTokenBalance, sendCoin, sendTokenFromContract } from '../../actions/common'\r\nimport truncateEthAddress from 'truncate-eth-address'\r\n\r\nconst SendToken = ({ getBalanceDashboard, fetchTransaction }) => {\r\n\r\n    const { chainId, signer, provider, connected } = useSelector(state => state.web3)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { userconfig } = useSelector(state => state.usersetting)\r\n\r\n\r\n\r\n    const [selectedasset, setselectedasset] = useState(null)\r\n    const [selectedtype, setselectedtype] = useState(null)\r\n    const [filterAsset, setfilterAsset] = useState([])\r\n    const [assetBalance, setAssetBalance] = useState(0)\r\n    const [currentPrice, setcurrentPrice] = useState(0)\r\n    const [balloading, setballoading] = useState(false)\r\n\r\n    //Sent Token Forms\r\n    const [receiverAddress, setreceiverAddress] = useState(\"\")\r\n    const [sendToken, setSendToken] = useState(\"\")\r\n\r\n    //\r\n    const [txnStatus, settxnStatus] = useState({})\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            filterAssets()\r\n        }\r\n\r\n    }, [connected])\r\n\r\n    useEffect(() => {\r\n        settxnStatus({})\r\n    }, [sendToken, receiverAddress, selectedasset])\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedasset) {\r\n            getBalance()\r\n            const findType = AVAILABLE_ASSETS.find(x => x.value === selectedasset && x.networkID === parseInt(chainId))\r\n            setselectedtype(findType.type)\r\n        }\r\n\r\n    }, [selectedasset])\r\n\r\n    const getBalance = async () => {\r\n        setAssetBalance(0)\r\n        setcurrentPrice(0)\r\n        setballoading(true)\r\n        let findasset = AVAILABLE_ASSETS.find(x => x.value === selectedasset && x.networkID === parseInt(chainId))\r\n        if (findasset && findasset.type === \"coin\") {\r\n            let getBal = await getCoinBalance(signer)\r\n            let currentprice = await getMarketPrice(findasset.ids, userconfig.defaultCurrency)\r\n            setAssetBalance(getBal)\r\n            setcurrentPrice(currentprice)\r\n            setballoading(false)\r\n        } else if (findasset && findasset.type === \"token\") {\r\n            let getBal = await getTokenBalance(findasset.contractAddress, user.walletAddress, signer)\r\n            let currentprice = await getMarketPrice(findasset.ids, userconfig.defaultCurrency)\r\n            setAssetBalance(getBal)\r\n            setcurrentPrice(currentprice)\r\n            setballoading(false)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const filterAssets = () => {\r\n        const filterValue = AVAILABLE_ASSETS.filter(x => x.networkID === parseInt(chainId))\r\n        console.log(\"Filte rValue\", filterValue)\r\n        if (filterValue.length > 0) {\r\n            console.log(\"filterValue\", filterValue[0].type)\r\n            setselectedasset(filterValue[0].value)\r\n            setselectedtype(filterValue[0].type)\r\n            setfilterAsset(filterValue)\r\n        }\r\n    }\r\n\r\n    var filterAssetRender = filterAsset.map((result, index) => {\r\n        return <option value={result.value}>{result.label}</option>\r\n    })\r\n\r\n    var alertRender;\r\n\r\n\r\n    const triggerSend = async (e) => {\r\n        e.preventDefault()\r\n        if (receiverAddress === \"\" || sendToken === \"\") {\r\n            ToastPopup.failure(\"Fill All the Fields\")\r\n            return\r\n        }\r\n        // Regular expression pattern to match Ethereum wallet address\r\n        if (!addressRegex.test(receiverAddress)) {\r\n            ToastPopup.failure(\"Invalid Address.Address start with 0x\")\r\n            return\r\n        }\r\n        if (parseFloat(sendToken) <= 0) {\r\n            ToastPopup.failure(\"Send token must be greater the zero\")\r\n            return\r\n        }\r\n\r\n        if (parseFloat(sendToken) > parseFloat(assetBalance)) {\r\n            ToastPopup.failure(\"Low Balance\")\r\n            return\r\n        }\r\n\r\n\r\n        BlockPopup.standard('.sendtoken', `Please wait... Don't Close`);\r\n        if (selectedtype === \"coin\") {\r\n            const sendResult = await sendCoin(provider, signer, receiverAddress, sendToken)\r\n            console.log(\"sendResult\", sendResult)\r\n            settxnStatus(sendResult)\r\n            getBalance()\r\n            getBalanceDashboard()\r\n            fetchTransaction()\r\n            BlockPopup.remove('.sendtoken');\r\n\r\n        } else if (selectedtype === \"token\") {\r\n            let findasset = AVAILABLE_ASSETS.find(x => x.value === selectedasset && x.networkID === parseInt(chainId))\r\n            const sendResult = await sendTokenFromContract(provider, signer, findasset.contractAddress, receiverAddress, sendToken)\r\n            console.log(\"sendResult\", sendResult)\r\n            settxnStatus(sendResult)\r\n            getBalance()\r\n            getBalanceDashboard()\r\n            fetchTransaction()\r\n            BlockPopup.remove('.sendtoken');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n\r\n                <div\r\n                    id=\"sendModal\"\r\n                    className=\"modal fade \"\r\n                    tabIndex={-1}\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n\r\n                    <div className=\"modal-dialog\">\r\n\r\n                        <div className=\"modal-content sendtoken\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        <div className=\"row g-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"p-xl-5 p-3\">\r\n\r\n                                                    <h3 className=\"h3 mb-0 mt-3 text-center\">Send Token</h3>\r\n                                                    <p className=\"text-muted mt-1 mb-4 text-center\">\r\n                                                        Enter your Valid Wallet Address (EVM compatible) otherwise you will lose your fund.\r\n                                                    </p>\r\n                                                    {/*form start*/}\r\n                                                    <form onSubmit={triggerSend} className=\"authentication-form\">\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                                                                Wallet Address <small>*</small>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                id=\"exampleInputEmail1\"\r\n                                                                placeholder=\"0x......\"\r\n                                                                onChange={(e) => setreceiverAddress(e.target.value)}\r\n                                                                value={receiverAddress}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                                                                Number of Tokens to Send <small>*</small>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"number\"\r\n\r\n                                                                className=\"form-control\"\r\n                                                                id=\"exampleInputEmail1\"\r\n                                                                placeholder=\"10\"\r\n                                                                onChange={(e) => setSendToken(e.target.value)}\r\n                                                                value={sendToken}\r\n\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col\">\r\n                                                                    <ul className=\"checkout-list\">\r\n                                                                        <li>\r\n                                                                            <span>Select Asset</span>\r\n                                                                            <span>\r\n                                                                                <select value={selectedasset} onChange={(e) => setselectedasset(e.target.value)} className='form-select'>\r\n                                                                                    {filterAssetRender}\r\n                                                                                </select>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                        <li>\r\n                                                                            <span>Your Balance</span>\r\n                                                                            <span className=\"checkout-total\">{parseFloat(assetBalance).toFixed(4)} {selectedasset}</span>\r\n                                                                        </li>\r\n                                                                        <li>\r\n                                                                            <span>{selectedasset} Current Price</span>\r\n                                                                            <span className=\"checkout-balance text-primary\">{currentPrice} {userconfig.defaultCurrency}</span>\r\n                                                                        </li>\r\n\r\n\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        {txnStatus && txnStatus.status && Object.keys(txnStatus).length > 0 && <div role=\"alert\" class=\"alert text-success bg-white border alert-dismissible\">\r\n                                                            <div class=\"d-flex align-items-start\">\r\n                                                                <span class=\"badge badge-soft-success align-self-center me-3\">Success</span>\r\n                                                                <div class=\"w-100\">Your transaction is success <a href={EXPLORER_TXN_URL_LIST[chainId] + txnStatus.txhash} target=\"_blank\" class=\"text-success alert-link\">View Transaction</a></div>\r\n                                                            </div>\r\n                                                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                                                        </div>}\r\n                                                        {(txnStatus && Object.keys(txnStatus).length > 0 && !txnStatus.status) && <div role=\"alert\" class=\"alert text-danger bg-white border alert-dismissible\">\r\n                                                            <div class=\"d-flex align-items-start\">\r\n                                                                <span class=\"badge badge-soft-danger align-self-center me-3\">Ohh no!</span>\r\n                                                                <div class=\"w-100\">Your transaction is failed <a href={EXPLORER_TXN_URL_LIST[chainId] + txnStatus.txhash} target=\"_blank\" class=\"text-danger alert-link\">View Transaction</a></div>\r\n                                                            </div>\r\n                                                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                                                        </div>}\r\n\r\n\r\n                                                        <div className=\"mb-0 text-center d-grid\">\r\n                                                            {!balloading ? <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                                Send\r\n                                                            </button> : <button class=\"btn btn-outline-primary btn-sm\" type=\"button\">\r\n                                                                <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                Fetching details..\r\n                                                            </button>}\r\n                                                        </div>\r\n                                                    </form>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>{\" \"}\r\n                                    {/* end card-body */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendToken\r\n","import React, { useEffect, useRef } from 'react';\r\nimport QRCode from 'qrcode';\r\n\r\nconst QRCodeGenerator = ({ tokenAddress, tokenAmount, label, message, size }) => {\r\n    const qrCodeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const generateQRCode = async () => {\r\n            try {\r\n                const link = `ethereum:${tokenAddress}?label=${encodeURIComponent(\r\n                    label\r\n                )}&message=${encodeURIComponent(message)}`;\r\n                const canvas = qrCodeRef.current;\r\n                await QRCode.toCanvas(canvas, link, { width: size, height: size });\r\n                console.log('QR code generated!');\r\n            } catch (error) {\r\n                console.error('Error generating QR code:', error);\r\n            }\r\n        };\r\n\r\n        generateQRCode();\r\n    }, [tokenAddress, tokenAmount, label, message, size]);\r\n\r\n    return <canvas ref={qrCodeRef} />;\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n","import React from 'react'\r\nimport QRCodeGenerator from '../common/QRCodeGenerator'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ReceiveToken = () => {\r\n    const { user } = useSelector(state => state.auth)\r\n    return (\r\n        <div>\r\n            <>\r\n\r\n                <div\r\n                    id=\"receiveModal\"\r\n                    className=\"modal fade\"\r\n                    tabIndex={-1}\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n\r\n                    <div className=\"modal-dialog\">\r\n\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        <div className=\"row g-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"p-xl-5 p-3\">\r\n\r\n\r\n                                                    <h3 className=\"h3 mb-0 mt-3 text-center\">Receive Token</h3>\r\n                                                    <p className=\"text-muted mt-1 mb-4 text-center\">\r\n                                                        Send Valid (EVM compatible) Tokens otherwise you will lose your fund.\r\n                                                    </p>\r\n                                                    <div className='text-center'>\r\n                                                        <QRCodeGenerator\r\n                                                            tokenAddress={user.walletAddress}\r\n                                                            // tokenAmount=\"100\"\r\n                                                            label=\"My ERC20 Tokens\"\r\n                                                            message=\"Thank you for your support\"\r\n                                                            size={300}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>{\" \"}\r\n                                    {/* end card-body */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceiveToken\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AVAILABLE_ASSETS, BlockPopup, RPC_URL_BY_CHAIN, EXPLORER_TXN_URL_LIST, ToastPopup, addressRegex, API_URL } from '../../actions/constant'\r\nimport { getCoinBalance, getMarketPrice, getTokenBalance, getTokenSymbol, sendCoin, sendTokenFromContract } from '../../actions/common'\r\nimport truncateEthAddress from 'truncate-eth-address'\r\nimport TextField from '../common/TextField'\r\nimport axios from 'axios'\r\n\r\nconst CustomToken = ({ getBalanceDashboard }) => {\r\n\r\n    const { chainId, signer, provider, } = useSelector(state => state.web3)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [loading, setloading] = useState(\"\")\r\n\r\n    //Sent Token Forms\r\n\r\n    const [contractAddress, setcontractAddress] = useState(\"\")\r\n    const [symbol, setsymbol] = useState(\"\")\r\n    const [name, setname] = useState(\"\")\r\n    const [errors, seterrors] = useState({})\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getSymbol = async () => {\r\n            if (contractAddress !== \"\" && addressRegex.test(contractAddress)) {\r\n                const getSymbolValue = await getTokenSymbol(contractAddress, signer)\r\n                console.log(\"getSymbolValue\", getSymbolValue)\r\n                setsymbol(getSymbolValue)\r\n            }\r\n        }\r\n\r\n        getSymbol()\r\n\r\n\r\n    }, [contractAddress])\r\n\r\n\r\n\r\n\r\n    const triggerAddToken = async (e) => {\r\n        e.preventDefault()\r\n        if (contractAddress === \"\" || symbol === \"\") {\r\n            ToastPopup.failure(\"Fill All the Fields\")\r\n            return\r\n        }\r\n        // Regular expression pattern to match Ethereum wallet address\r\n        if (!addressRegex.test(contractAddress)) {\r\n            ToastPopup.failure(\"Invalid Contract Address.Address start with 0x\")\r\n            return\r\n        }\r\n        BlockPopup.standard('.addcustomtoken', `Please wait... Don't Close`);\r\n\r\n        try {\r\n            const insertData = {\r\n                contractAddress,\r\n                symbol,\r\n                name,\r\n                decimal: \"18\",\r\n                chainId\r\n            }\r\n            let result = await axios.post(API_URL + \"/api/customtoken\", insertData)\r\n            if (result.data) {\r\n                setcontractAddress(\"\")\r\n                setsymbol(\"\")\r\n                setname(\"\")\r\n                BlockPopup.remove('.addcustomtoken');\r\n                ToastPopup.success(\"Successfully Added\")\r\n            }\r\n        } catch (err) {\r\n            BlockPopup.remove('.addcustomtoken');\r\n            if (err && err.response && err.response.data) {\r\n                seterrors(err.response.data)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n\r\n                <div\r\n                    id=\"customtokenModal\"\r\n                    className=\"modal fade \"\r\n                    tabIndex={-1}\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n\r\n                    <div className=\"modal-dialog\">\r\n\r\n                        <div className=\"modal-content addcustomtoken\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        <div className=\"row g-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"p-xl-5 p-3\">\r\n\r\n                                                    <h3 className=\"h3 mb-0 mt-3 text-center\">Add Custom Token</h3>\r\n                                                    <p className=\"text-muted mt-1 mb-4 text-center\">\r\n                                                        Enter your Valid Contract Address to add custome token.\r\n                                                    </p>\r\n                                                    {/*form start*/}\r\n                                                    <form onSubmit={triggerAddToken} className=\"authentication-form\">\r\n                                                        <div className=\"mb-3\">\r\n                                                            <TextField\r\n                                                                isRequired\r\n                                                                label=\"Token Name (for your Reference)\"\r\n                                                                onChange={(e) => setname(e.target.value)}\r\n                                                                value={name}\r\n                                                                placeholder=\"\"\r\n                                                                error={errors.symbol}\r\n                                                            />\r\n\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n\r\n                                                            <TextField\r\n                                                                isRequired\r\n                                                                label=\"Contract Address\"\r\n                                                                onChange={(e) => setcontractAddress(e.target.value)}\r\n                                                                value={contractAddress}\r\n                                                                placeholder=\"0x......\"\r\n                                                                error={errors.contractAddress}\r\n                                                            />\r\n\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <TextField\r\n                                                                isRequired\r\n                                                                label=\"Symbol\"\r\n                                                                onChange={(e) => setsymbol(e.target.value)}\r\n                                                                value={symbol}\r\n                                                                placeholder=\"\"\r\n                                                                error={errors.symbol}\r\n                                                            />\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n                                                        <div className=\"mb-0 text-center d-grid\">\r\n                                                            {!loading ? <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                                Add Token\r\n                                                            </button> : <button class=\"btn btn-outline-primary btn-sm\" type=\"button\">\r\n                                                                <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                Please Wait..\r\n                                                            </button>}\r\n                                                        </div>\r\n                                                    </form>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>{\" \"}\r\n                                    {/* end card-body */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomToken\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BaseLayout from '../commonlayout/BaseLayout';\r\nimport { copyTextToClipboard, getCoinBalance, getMarketPrice, getTokenBalance, getTxnStatus } from '../../actions/common';\r\nimport truncateEthAddress from 'truncate-eth-address'\r\nimport { setBalance } from '../../reducers/web3Reducer';\r\nimport SendToken from './SendToken';\r\nimport ReceiveToken from './ReceiveToken';\r\nimport { API_URL, AVAILABLE_ASSETS, AVAILABLE_NETWORK, EXPLORER_TXN_URL_LIST, EXPLORER_URL_LIST, RPC_URL_BY_CHAIN, TXN_API_URL_LIST, TXN_RESPONSE_URL_LIST, WALLET_URL_LIST } from '../../actions/constant';\r\nimport axios from 'axios';\r\nimport CustomToken from './CustomToken';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n    const { user } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const { connected, providerConnect, provider, signer, balance, symbol, chainId, icon } = useSelector(state => state.web3)\r\n\r\n    const { userconfig } = useSelector(state => state.usersetting)\r\n\r\n    const [tokenList, settokenList] = useState([])\r\n    const [customtokenList, setcustomtokenList] = useState([])\r\n    const [TokenRender, setTokenRender] = useState([])\r\n    const [CustomTokenRender, setCustomTokenRender] = useState([])\r\n\r\n    const [TxnRender, setTxnRender] = useState([])\r\n    const [txnLoading, settxnLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            getBalance()\r\n            getCustomToken()\r\n        }\r\n\r\n    }, [connected])\r\n    const getBalance = async () => {\r\n        if (connected && signer) {\r\n            let balance = await getCoinBalance(signer)\r\n            dispatch(setBalance(parseFloat(balance).toFixed(4)))\r\n            const filterValue = AVAILABLE_ASSETS.filter(x => x.networkID === parseInt(chainId) && x.type === \"token\")\r\n            settokenList(filterValue)\r\n\r\n        }\r\n    }\r\n\r\n    const getCustomToken = async () => {\r\n        try {\r\n            let result = await axios.get(API_URL + \"/api/customtoken?chainId=\" + chainId)\r\n            setcustomtokenList(result.data)\r\n        } catch (err) {\r\n            setcustomtokenList([])\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchCustomTokenData() {\r\n            const promises = customtokenList.map(async (result) => {\r\n                const balance = await getTokenBalance(result.contractAddress, user.walletAddress, signer);\r\n                return { ...result, balance };\r\n            });\r\n\r\n            const resolvedTokens = await Promise.all(promises);\r\n            setCustomTokenRender(resolvedTokens);\r\n        }\r\n\r\n        fetchCustomTokenData();\r\n    }, [customtokenList]);\r\n\r\n    useEffect(() => {\r\n        async function fetchTokenData() {\r\n            const promises = tokenList.map(async (result) => {\r\n                const balance = await getTokenBalance(result.contractAddress, user.walletAddress, signer);\r\n\r\n                const currentPrice = await getMarketPrice(result.ids, userconfig.defaultCurrency);\r\n\r\n                return { ...result, balance: parseFloat(balance).toFixed(4), currentPrice };\r\n            });\r\n\r\n            const resolvedTokens = await Promise.all(promises);\r\n            setTokenRender(resolvedTokens);\r\n        }\r\n\r\n        fetchTokenData();\r\n    }, [tokenList]);\r\n\r\n    const fetchTransaction = async () => {\r\n        try {\r\n\r\n\r\n            settxnLoading(true)\r\n            const apiUrlGenerator = TXN_API_URL_LIST[chainId];\r\n            const apiUrlResponseGenerator = TXN_RESPONSE_URL_LIST[chainId];\r\n\r\n            const url = apiUrlGenerator(user.walletAddress);\r\n            const axiosWithoutAuth = axios.create();\r\n            // const response = await axiosWithoutAuth.get(url);\r\n            const urlParams = new URLSearchParams(url);\r\n            const headers = new Headers();\r\n            if (urlParams.get(\"headerKey\") && urlParams.get(\"headerValue\")) {\r\n                headers.append(urlParams.get(\"headerKey\"), urlParams.get(\"headerValue\"));  // Add only if both key and value exist\r\n            }\r\n            const response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: headers,\r\n            });\r\n            // Check if the response was successful\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            // Parse the JSON data from the response\r\n            const jsonData = await response.json();\r\n            console.log(\"AXIOS  RESP\", jsonData)\r\n            const modifiedResponse = apiUrlResponseGenerator(jsonData)\r\n\r\n            if (modifiedResponse && modifiedResponse.length > 0) {\r\n                const promises = modifiedResponse.map(async (result) => {\r\n                    const [txHash, status] = await getTxnStatus(result.hash || result.txId, provider);\r\n                    return { txHash, status: status ? \"success\" : \"failure\", color: status ? \"success\" : \"danger\" };\r\n                });\r\n\r\n                const resolvedTxn = await Promise.all(promises);\r\n\r\n                setTxnRender(resolvedTxn);\r\n                settxnLoading(false)\r\n            } else {\r\n                settxnLoading(false)\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"err\", err)\r\n            settxnLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            fetchTransaction();\r\n        }\r\n    }, [connected]);\r\n\r\n    var TxnListRender = TxnRender.map(result => {\r\n        return <div className=\"row justify-content-sm-between mt-4\">\r\n            <div className=\"col-lg-6\">\r\n\r\n                <a href={`${EXPLORER_TXN_URL_LIST[chainId]}${result.txHash}`} target=\"_blank\">  {result.txHash && truncateEthAddress(result.txHash)}</a> {\"\"}\r\n\r\n\r\n                <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                    copyTextToClipboard(result.txHash)\r\n                }}>\r\n                    <img\r\n                        src=\"assets/images/icons/copy.svg\"\r\n                        className=\"align-self-center\"\r\n                        alt=\"logo-img\"\r\n                        height={16}\r\n                    />\r\n                </span>\r\n                {/* end checkbox */}\r\n            </div>{\" \"}\r\n            {/* end col */}\r\n\r\n            <div className=\"col-lg-6\">\r\n                <ul\r\n                    className=\"list-inline text-sm-end mb-0\"\r\n                    id=\"tooltip-container2\"\r\n                >\r\n\r\n                    <li className=\"list-inline-item\">\r\n                        <span className={`badge badge-soft-${result.color}  p-1\"`}>\r\n                            {result.status}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>{\" \"}\r\n            {/* end col */}\r\n        </div>\r\n    })\r\n\r\n\r\n    return (\r\n        <BaseLayout>\r\n            <section className=\"position-relative overflow-hidden bg-gradient2 py-3 px-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"page-title\">\r\n                                <h3 className=\"mb-0\">Hi {user.firstName}</h3>\r\n                                <p className=\"mt-1 fw-medium\">Welcome to Paytez!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                        {/* profile widget star */}\r\n                        <div className=\"col-lg-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"d-flex\">\r\n                                                <img\r\n                                                    src={icon}\r\n                                                    className=\"img-fluid avatar-sm rounded-sm me-3\"\r\n                                                    alt=\"...\"\r\n                                                />\r\n                                                <div className=\"flex-grow-1\">\r\n                                                    <h4 className=\"mb-1 mt-0 fs-16\">{user.walletAddress && truncateEthAddress(user.walletAddress)}\r\n                                                        <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                                            copyTextToClipboard(user.walletAddress)\r\n                                                        }}>\r\n                                                            <i data-feather=\"copy\"></i>\r\n                                                        </span>\r\n                                                    </h4>\r\n                                                    <h2>{balance} {symbol}</h2>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-auto text-end\">\r\n                                            <div className=\"dropdown\">\r\n                                                <a\r\n                                                    className=\"btn-link text-muted dropdown-toggle arrow-none\"\r\n                                                    href=\"#\"\r\n                                                    role=\"button\"\r\n                                                    id=\"dropdownMenuLink-1\"\r\n                                                    data-bs-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    aria-expanded=\"false\"\r\n                                                >\r\n                                                    <i\r\n                                                        className=\"icon icon-xs\"\r\n                                                        data-feather=\"more-horizontal\"\r\n                                                    />\r\n                                                </a>\r\n                                                <div\r\n                                                    className=\"dropdown-menu dropdown-menu-end\"\r\n                                                    aria-labelledby=\"dropdownMenuLink-1\"\r\n                                                >\r\n                                                    <a className=\"dropdown-item\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#sendModal\">\r\n                                                        <i className=\"icon-xxs icon me-2\" data-feather=\"send\" />\r\n                                                        Send\r\n                                                    </a>\r\n                                                    <a className=\"dropdown-item\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#receiveModal\">\r\n                                                        <i\r\n                                                            className=\"icon-xxs icon me-2\"\r\n                                                            data-feather=\"download\"\r\n                                                        />\r\n                                                        Receive\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-divider\" />\r\n                                                    <a className=\"dropdown-item text-primary\" target='_blank' href={`${WALLET_URL_LIST[chainId]}/${user.walletAddress}`}>\r\n                                                        <i\r\n                                                            className=\"icon-xxs icon me-2\"\r\n                                                            data-feather=\"eye\"\r\n                                                        />\r\n                                                        View on Explorer\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row align-items-center justify-content-center pt-1\">\r\n\r\n                                        <button type=\"button\" class=\"btn btn-soft-primary col-5 me-2\" data-bs-toggle=\"modal\" data-bs-target=\"#sendModal\"><span class=\"pln\">Send</span></button>\r\n                                        {/* </div> */}\r\n                                        {/* <div className=\"col-md-4\"> */}\r\n                                        <button type=\"button\" class=\"btn btn-soft-success col-5 me-2\" data-bs-toggle=\"modal\" data-bs-target=\"#receiveModal\"><span class=\"pln\">Receive</span></button>\r\n\r\n\r\n                                        {/* </div> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col\">\r\n                                            <ul className=\"list-group custom-list-item \">\r\n                                                {\r\n                                                    TokenRender.map(result => {\r\n                                                        return <li className=\"list-group-item\">\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <img width=\"32\" style={{ borderRadius: 50 }} src={result.icon} alt=\"Logo\" className=\"logo\" />\r\n                                                                <div className=\"ms-3\">\r\n                                                                    <h5 className=\"mb-0 item-name\">{result.name} ({result.value})</h5>\r\n                                                                </div>\r\n                                                                <div className=\"ms-auto\">\r\n                                                                    <h5 class=\"mt-0 mb-0 text-right\">{result.balance}</h5>\r\n                                                                    <h6 className=\"mb-0 item-details text-secondary text-right\">{result.currentPrice} {userconfig.defaultCurrency}</h6>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    })\r\n                                                }\r\n\r\n                                                {\r\n                                                    CustomTokenRender.map(result => {\r\n                                                        return <li className=\"list-group-item\">\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <img width=\"32\" style={{ borderRadius: 50 }} src={\"https://ui-avatars.com/api/?background=244b81&color=fff&name=\" + result.symbol} alt=\"Logo\" className=\"logo\" />\r\n                                                                <div className=\"ms-3\">\r\n                                                                    <h5 className=\"mb-0 item-name\">{result.name} ({result.symbol})</h5>\r\n                                                                </div>\r\n                                                                <div className=\"ms-auto\">\r\n                                                                    <h5 class=\"mt-0 mb-0 text-right\">{result.balance}</h5>\r\n                                                                    <h6 className=\"mb-0 item-details text-secondary text-right\">~ {userconfig.defaultCurrency}</h6>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    })\r\n                                                }\r\n\r\n\r\n                                            </ul>\r\n                                            <div class=\"text-center\">\r\n                                                <button data-bs-toggle=\"modal\" data-bs-target=\"#customtokenModal\" class=\"btn btn-soft-danger btn-sm\" type=\"button\">\r\n                                                    <i data-feather=\"plus-circle\" className='mx-1' />\r\n                                                    Add Custom Token\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* profile widget end */}\r\n                        {/* stats start */}\r\n                        <div className=\"col-lg-3\">\r\n                            <div>\r\n                                <div className=\"row d-flex align-items-center my-2 pb-2\">\r\n                                    <img src=\"assets/images/ad-place.png\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <h4 class=\"mb-4 mt-0 fs-16\">Available Networks</h4>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    {AVAILABLE_NETWORK.filter(x => x.mainnet).map(res => {\r\n                                        return <Link to={\"#\"} onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            localStorage.setItem(\"chainId\", res.networkID)\r\n                                            window.location.reload()\r\n                                        }} className=\"d-flex align-items-center p-2\">\r\n                                            {/* <span className=\"bg-soft-primary avatar avatar-xs rounded icon icon-with-bg icon-xxs text-primary me-3 flex-shrink-0\"> */}\r\n                                            <img\r\n                                                src={res.icon}\r\n                                                className=\" me-3\"\r\n                                                height={20}\r\n                                                alt=\"...\"\r\n                                            />\r\n                                            {/* </span> */}\r\n                                            <div className=\"flex-grow-1\">\r\n                                                <h6 className=\"fw-medium my-0 fs-13\">{res.networkName}</h6>\r\n                                            </div>\r\n                                        </Link>\r\n\r\n                                    })}\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* stats end */}\r\n                        {/* revenue start */}\r\n                        <div className=\"col-lg-4\">\r\n\r\n\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col\">\r\n                                                    <h4 class=\"mb-3 mt-0 fs-16\">Transactions {\"\"}\r\n                                                        {!txnLoading ? <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                                            fetchTransaction()\r\n                                                        }}>\r\n                                                            <img\r\n                                                                src=\"assets/images/icons/refresh.svg\"\r\n                                                                className=\"align-self-center\"\r\n                                                                alt=\"logo-img\"\r\n                                                                height={16}\r\n                                                            />\r\n\r\n                                                        </span> : <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div class=\"col-auto text-end\">\r\n                                                    <a href={`${WALLET_URL_LIST[chainId]}/${user.walletAddress}`} target=\"_blank\" class=\"fw-semibold text-primary fs-13\">View All <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right ms-1 icon-xxs\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></a>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                TxnListRender\r\n                                            }\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        {/* revenue end */}\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <SendToken getBalanceDashboard={getBalance} fetchTransaction={fetchTransaction} />\r\n            <ReceiveToken />\r\n            <CustomToken />\r\n        </BaseLayout>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n"],"names":["getCoinBalance","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","signer","balvalue","result","wrap","_context","prev","next","getBalance","sent","ethers","abrupt","stop","_x","apply","arguments","getTokenBalance","_ref2","_callee2","contractAddress","address","tokencontract","assetrate","convertedprice","_context2","TokenABI","balanceOf","_x2","_x3","_x4","getTokenSymbol","_ref3","_callee3","assetsymbol","_context3","symbol","_x5","_x6","copyTextToClipboard","text","navigator","clipboard","writeText","then","ToastPopup","success","catch","error","failure","getMarketPrice","_ref4","_callee4","ids","defaultcurrency","temp","marketPrice","_args4","_context4","length","undefined","axios","concat","data","toLowerCase","parseFloat","toFixed","t0","console","log","_x7","sendCoin","_ref5","_callee5","provider","sendAddress","sendValue","transactionHash","_yield$getTxnStatus","_yield$getTxnStatus2","txhash","status","_context5","sendTransaction","to","value","hash","getTxnStatus","_slicedToArray","_x8","_x9","_x10","_x11","sendTokenFromContract","_ref6","_callee6","contract","recipientAddress","amount","_yield$getTxnStatus3","_yield$getTxnStatus4","_context6","transfer","_x12","_x13","_x14","_x15","_x16","sleep","milliseconds","Promise","resolve","setTimeout","_ref7","_callee7","txHash","transactionReceipt","_context7","getTransactionReceipt","_x17","_x18","getBalanceDashboard","fetchTransaction","_useSelector","useSelector","state","web3","chainId","connected","user","auth","userconfig","usersetting","_useState","useState","_useState2","selectedasset","setselectedasset","_useState3","_useState4","selectedtype","setselectedtype","_useState5","_useState6","filterAsset","setfilterAsset","_useState7","_useState8","assetBalance","setAssetBalance","_useState9","_useState10","currentPrice","setcurrentPrice","_useState11","_useState12","balloading","setballoading","_useState13","_useState14","receiverAddress","setreceiverAddress","_useState15","_useState16","sendToken","setSendToken","_useState17","_useState18","txnStatus","settxnStatus","useEffect","filterAssets","findType","AVAILABLE_ASSETS","find","x","networkID","parseInt","type","findasset","getBal","currentprice","_getBal","_currentprice","defaultCurrency","walletAddress","filterValue","filter","filterAssetRender","map","index","_jsx","children","label","triggerSend","e","sendResult","_sendResult","preventDefault","addressRegex","test","BlockPopup","standard","remove","_Fragment","id","className","tabIndex","role","_jsxs","onSubmit","htmlFor","placeholder","onChange","target","Object","keys","class","href","EXPLORER_TXN_URL_LIST","tokenAddress","tokenAmount","message","size","qrCodeRef","useRef","generateQRCode","link","canvas","encodeURIComponent","current","QRCode","width","height","ref","QRCodeGenerator","loading","setcontractAddress","setsymbol","name","setname","errors","seterrors","getSymbol","getSymbolValue","triggerAddToken","insertData","decimal","API_URL","response","TextField","isRequired","dispatch","useDispatch","_useSelector2","providerConnect","balance","icon","tokenList","settokenList","customtokenList","setcustomtokenList","TokenRender","setTokenRender","CustomTokenRender","setCustomTokenRender","TxnRender","setTxnRender","txnLoading","settxnLoading","getCustomToken","_balance","setBalance","_fetchCustomTokenData","promises","resolvedTokens","_objectSpread","all","fetchCustomTokenData","_fetchTokenData","fetchTokenData","_callee8","apiUrlGenerator","apiUrlResponseGenerator","url","urlParams","headers","jsonData","modifiedResponse","resolvedTxn","_context8","TXN_API_URL_LIST","TXN_RESPONSE_URL_LIST","URLSearchParams","Headers","get","append","fetch","method","ok","Error","json","txId","color","TxnListRender","truncateEthAddress","style","cursor","onClick","src","alt","BaseLayout","firstName","WALLET_URL_LIST","borderRadius","AVAILABLE_NETWORK","mainnet","res","Link","localStorage","setItem","window","location","reload","networkName","xmlns","viewBox","fill","stroke","x1","y1","x2","y2","points","SendToken","ReceiveToken","CustomToken"],"sourceRoot":""}