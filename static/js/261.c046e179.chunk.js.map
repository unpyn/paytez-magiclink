{"version":3,"file":"static/js/261.c046e179.chunk.js","mappings":"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","sources":["components/setting/ApiKey.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport BaseLayout from '../commonlayout/BaseLayout'\r\nimport TextField from '../common/TextField'\r\nimport SettingSidebar from './SettingSidebar'\r\nimport axios from 'axios'\r\nimport { API_URL, BlockPopup, IMAGE_URL, ToastPopup, uploadFileServer } from '../../actions/constant'\r\nimport generateApiKey from 'generate-api-key';\r\nimport { listUserSetting } from '../../reducers/usersettingReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst QrSetting = () => {\r\n    const dispatch = useDispatch()\r\n    const fileInputRef = useRef(null);\r\n    const initData = {\r\n\r\n    }\r\n\r\n    const [data, setdata] = useState(initData)\r\n    const [errors, seterrors] = useState(initData)\r\n\r\n\r\n\r\n    const handleFileChange = async (event) => {\r\n        const selectedFile = event.target.files[0];\r\n        if (event.target.files) {\r\n            const formdata = new FormData()\r\n            formdata.append(\"file\", event.target.files[0])\r\n            formdata.append(\"filename\", event.target.files[0].name)\r\n\r\n            try {\r\n                const filename = await uploadFileServer(formdata)\r\n                setdata({ ...data, qrLogo: filename })\r\n            } catch (e) {\r\n                ToastPopup.failure(\"Error Ocuured in File Upload\")\r\n            }\r\n        }\r\n\r\n        // Do something with the selected file\r\n        console.log('Selected file:', selectedFile);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const getData = async () => {\r\n        BlockPopup.standard('.qrpaymentsetting', `Please wait... Don't Close`);\r\n        try {\r\n            let result = await axios.get(API_URL + \"/api/usersetting/\")\r\n            BlockPopup.remove('.qrpaymentsetting');\r\n            if (result.data) {\r\n                setdata(result.data)\r\n            }\r\n\r\n        } catch (err) {\r\n            BlockPopup.remove('.qrpaymentsetting');\r\n            ToastPopup.failure(\"Error Ocuured in API\")\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        BlockPopup.standard('.qrpaymentsetting', `Please wait... Don't Close`);\r\n\r\n        try {\r\n            let result = await axios.post(API_URL + \"/api/usersetting/\", data)\r\n            if (result.data) {\r\n                BlockPopup.remove('.qrpaymentsetting');\r\n                ToastPopup.success(\"Successfully Added\")\r\n                dispatch(listUserSetting())\r\n            }\r\n\r\n        } catch (err) {\r\n            BlockPopup.remove('.qrpaymentsetting');\r\n            if (err && err.response && err.response.data) {\r\n                seterrors(err.response.data)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onGenerateKey = () => {\r\n        setdata({ ...data, apiKey: generateApiKey() })\r\n    }\r\n\r\n    var qrpaymentImg = \"./assets/images/avatars/img-8.jpg\"\r\n    if (data.qrLogo) {\r\n        qrpaymentImg = IMAGE_URL + data.qrLogo\r\n    }\r\n    return (\r\n        <BaseLayout>\r\n            <section className=\"position-relative p-3 bg-gradient2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"page-title\">\r\n                                <h3 className=\"my-0\">Account Settings</h3>\r\n                                <p className=\"mt-1 fw-medium\">Change your account settings</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3\">\r\n                                            {/* menu start */}\r\n                                            <SettingSidebar />\r\n                                            {/* menu end */}\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 qrpaymentsetting\">\r\n                                            <div className=\"tab-content p-0\">\r\n                                                {/* account form start */}\r\n                                                <div className=\"tab-pane fade show active px-3\" id=\"account\">\r\n                                                    <h4 className=\"mt-0\">API Key Setting for Web Payments</h4>\r\n                                                    <form onSubmit={onSubmit} className=\"account-form\">\r\n\r\n\r\n                                                        {/* basic info start */}\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-lg-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <TextField\r\n                                                                        isRequired\r\n                                                                        label=\"API Key\"\r\n                                                                        disabled={true}\r\n                                                                        onChange={(e) => setdata({ ...data, apiKey: e.target.value })}\r\n                                                                        value={data.apiKey}\r\n                                                                        placeholder=\"\"\r\n                                                                        error={errors.apiKey}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                                <button onClick={() => onGenerateKey()} type=\"button\" className=\"btn btn-primary mt-3\">\r\n                                                                    Generate Key\r\n                                                                </button>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <TextField\r\n                                                                        isRequired\r\n                                                                        label=\"Whitelist IP Address\"\r\n                                                                        onChange={(e) => setdata({ ...data, whitelist: e.target.value })}\r\n                                                                        value={data.whitelist}\r\n                                                                        placeholder=\"\"\r\n                                                                        error={errors.whitelist}\r\n                                                                        info={\"Enter multiple address by comma seperated\"}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        {/* account removal end */}\r\n                                                        <hr className=\"my-4\" />\r\n                                                        {/* save start */}\r\n                                                        <div className=\"row mt-2\">\r\n                                                            <div className=\"col-lg-12\">\r\n                                                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                                                    Save Changes\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* save end */}\r\n                                                    </form>\r\n                                                </div>\r\n                                                {/* account form end */}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </BaseLayout>\r\n    )\r\n}\r\n\r\nexport default QrSetting\r\n"],"names":["dispatch","useDispatch","initData","useRef","_useState","useState","_useState2","_slicedToArray","data","setdata","_useState3","_useState4","errors","seterrors","useEffect","getData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","result","wrap","_context2","prev","next","BlockPopup","standard","axios","API_URL","sent","remove","t0","ToastPopup","failure","stop","apply","arguments","onSubmit","_ref3","_callee3","e","_context3","preventDefault","success","listUserSetting","response","_x2","qrLogo","IMAGE_URL","_jsx","BaseLayout","children","className","_jsxs","SettingSidebar","id","TextField","isRequired","label","disabled","onChange","_objectSpread","apiKey","target","value","placeholder","error","onClick","generateApiKey","type","whitelist","info"],"sourceRoot":""}